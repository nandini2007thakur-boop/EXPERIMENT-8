#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define MAX 100

char stack[MAX];
int top = -1;

void push(char c) {
stack[++top] = c;
}

char pop() {
return stack[top--];
}

char peek() {
return stack[top];
}

int precedence(char op) {
if(op == '^') return 3;
if(op == '*' || op == '/') return 2;
if(op == '+' || op == '-') return 1;
return 0;
}

intisOperator(char c) {
return (c=='+' || c=='-' || c=='*' || c=='/' || c=='^');
}

int main() {
char infix[MAX], postfix[MAX];
inti, k=0;
printf("Enter infix expression: ");
scanf("%s", infix);
for(i=0; infix[i]!='\0'; i++) {
if(isalnum(infix[i])) {
postfix[k++] = infix[i];
        } else if(infix[i]=='(') {
push('(');
        } else if(infix[i]==')') {
while(top!=-1 && peek()!='(')
postfix[k++] = pop();
pop();
        } else if(isOperator(infix[i])) {
while(top!=-1 && precedence(peek())>=precedence(infix[i]))
postfix[k++] = pop();
push(infix[i]);
        }
    }
while(top!=-1)
postfix[k++] = pop();
postfix[k] = '\0';
printf("Postfix expression: %s\n", postfix);
return 0;
}
